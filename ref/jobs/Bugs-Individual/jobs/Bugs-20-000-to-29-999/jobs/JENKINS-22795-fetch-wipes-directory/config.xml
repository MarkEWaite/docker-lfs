<?xml version='1.0' encoding='UTF-8'?>
<project>
  <actions/>
  <description>[JENKINS-22795](https://issues.jenkins.io/browse/JENKINS-22795) reports the git plugin erases the workspace

That erase is even without wipe workspace, or any clean setting.

The erase happens on *first clone* into the workspace.
This job shows the problem by creating a file in a pre-SCM step, then asserting the file exists after checkout.
Job is expected to fail until an option is added to the plugin to not clean on first checkout.
</description>
  <keepDependencies>false</keepDependencies>
  <properties>
    <hudson.plugins.buildblocker.BuildBlockerProperty plugin="build-blocker-plugin@1.7.3">
      <useBuildBlocker>false</useBuildBlocker>
      <blockLevel>GLOBAL</blockLevel>
      <scanQueueFor>DISABLED</scanQueueFor>
      <blockingJobs></blockingJobs>
    </hudson.plugins.buildblocker.BuildBlockerProperty>
    <hudson.plugins.throttleconcurrents.ThrottleJobProperty plugin="throttle-concurrents@2.0.1">
      <maxConcurrentPerNode>0</maxConcurrentPerNode>
      <maxConcurrentTotal>0</maxConcurrentTotal>
      <categories class="java.util.concurrent.CopyOnWriteArrayList"/>
      <throttleEnabled>false</throttleEnabled>
      <throttleOption>project</throttleOption>
      <limitOneJobWithMatchingParams>false</limitOneJobWithMatchingParams>
      <paramsToUseForLimit></paramsToUseForLimit>
    </hudson.plugins.throttleconcurrents.ThrottleJobProperty>
  </properties>
  <scm class="hudson.plugins.git.GitSCM" plugin="git@3.5.2-SNAPSHOT">
    <configVersion>2</configVersion>
    <userRemoteConfigs>
      <hudson.plugins.git.UserRemoteConfig>
        <name>origin</name>
        <refspec>+refs/heads/master:refs/remotes/origin/master</refspec>
        <url>https://github.com/MarkEWaite/jenkins-bugs</url>
      </hudson.plugins.git.UserRemoteConfig>
    </userRemoteConfigs>
    <branches>
      <hudson.plugins.git.BranchSpec>
        <name>master</name>
      </hudson.plugins.git.BranchSpec>
    </branches>
    <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
    <gitTool>Default</gitTool>
    <browser class="hudson.plugins.git.browser.GithubWeb">
      <url>https://github.com/MarkEWaite/jenkins-bugs</url>
    </browser>
    <submoduleCfg class="list"/>
    <extensions>
      <hudson.plugins.git.extensions.impl.CloneOption>
        <shallow>false</shallow>
        <noTags>true</noTags>
        <reference>/var/cache/git/mwaite/bugs/jenkins-bugs.git</reference>
        <depth>0</depth>
        <honorRefspec>true</honorRefspec>
      </hudson.plugins.git.extensions.impl.CloneOption>
    </extensions>
  </scm>
  <assignedNode>!windows</assignedNode>
  <canRoam>false</canRoam>
  <disabled>false</disabled>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <jdk>jdk11</jdk>
  <triggers>
    <hudson.triggers.SCMTrigger>
      <spec></spec>
      <ignorePostCommitHooks>false</ignorePostCommitHooks>
    </hudson.triggers.SCMTrigger>
  </triggers>
  <concurrentBuild>false</concurrentBuild>
  <builders>
    <hudson.tasks.Shell>
      <command>#!/bin/bash

# Check that a line exists in file created in pre-build SCM step
echo
for ((count=$BUILD_ID; count&gt;=1; count--)); do
    echo test $count
    expected=$JOB_BASE_NAME-$count
    if grep -q &quot;$expected\$&quot; build-tags.txt
    then
        echo pass $count
        echo
    else
        echo FAIL $count
        echo
        echo Test failed, did not find $expected in build-tags.txt
        echo
        echo Content of build-tags.txt is:
        cat build-tags.txt
        echo
        exit 1
    fi
done
</command>
      <unstableReturn>1</unstableReturn>
    </hudson.tasks.Shell>
  </builders>
  <publishers/>
  <buildWrappers>
    <org.jenkinsci.plugins.preSCMbuildstep.PreSCMBuildStepsWrapper plugin="preSCMbuildstep@0.3">
      <buildSteps>
        <hudson.tasks.Shell>
          <command>echo
echo Build step before SCM
echo $BUILD_TAG &gt;&gt; build-tags.txt
echo</command>
        </hudson.tasks.Shell>
      </buildSteps>
      <failOnError>false</failOnError>
    </org.jenkinsci.plugins.preSCMbuildstep.PreSCMBuildStepsWrapper>
  </buildWrappers>
</project>
